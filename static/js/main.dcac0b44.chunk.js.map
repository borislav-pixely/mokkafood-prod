{"version":3,"sources":["redux/cart/cart.actionTypes.js","redux/cart/cart.utils.js","redux/cart/cart.reducer.js","redux/appReducer.js","redux/store.js","redux/cart/cart.selector.js","components/common/ButtonCartCount/index.jsx","components/common/Logo/index.jsx","components/common/Footer/index.jsx","components/Home/Banner/banner.png","components/Home/Banner/index.jsx","components/common/ButtonAddRemoveItem/index.jsx","components/common/Menu/MenuItem/index.jsx","redux/cart/cart.action.js","components/common/Menu/index.jsx","components/common/MealPlans/index.jsx","components/common/Menu/data.js","components/common/MealPlans/data.js","components/common/Menu/MenuItemPopUpDetails/index.jsx","pages/Home/index.jsx","components/Cart/EmptyCart/index.jsx","components/common/Menu/CartMenuItem/index.jsx","components/common/Menu/CartMenu/index.jsx","components/PaymentForm/index.jsx","pages/Payment/index.jsx","pages/Cart/index.jsx","App.jsx","index.js"],"names":["CartActionTypes","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEM","addItemToCart","cartItems","cartItemToAdd","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter","INITIAL_STATE","cartReducer","state","action","type","payload","persistConfig","key","storage","whitelist","appReducer","combineReducers","cart","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","selectCartItems","createSelector","selectCartItemsCount","listItems","reduce","accumulatedQuantity","selectCartTotal","price","toFixed","mapStateToProps","createStructuredSelector","cartCount","connect","history","useHistory","className","onClick","push","Logo","Footer","Banner","handleScrollMealPlans","src","bannerImg","alt","ButtonAddRemoveItem","getClass","handleAddItem","handleRemoveItem","aria-hidden","cartList","dispatch","cartAddItem","item","cartRemoveItem","openItemDetails","img","name","options","info","useState","setForceUpdate","OptionList","onChange","handleChange","Object","entries","idsAndNames","selectedOption","selected","value","event","target","calories","forceUpdateValue","Calories","Info","infoElement","index","Price","String","foundItemInCart","handleQuantity","Menu","forwardRef","ref","list","menuItemsData","1","2","3","mealPlanItemsData","priceInCents","MenuItemPopUpDetails","closeItemDetails","class","itemDetailsPopUp","setItemDetailsPopUp","mealPlansRef","useRef","menuRef","current","scrollIntoView","behavior","MealPlans","EmptyCart","CartMenuItem","CartMenu","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","customer","customerDetailsAreAdded","success","setSuccess","serverMessage","setServerMessage","stripe","useStripe","elements","useElements","handleSubmit","e","a","preventDefault","createPaymentMethod","card","getElement","CardElement","error","paymentMethod","axios","post","customerFirstName","firstName","customerLastName","lastName","customerEmail","email","customerStreetName","streetName","customerStreetNumber","streetNumber","customerPostCode","postCode","customerCity","city","customerCountry","country","amount","response","data","message","console","log","onSubmit","stripePromise","loadStripe","Payment","confirmedEmail","setCustomer","setCustomerDetailsAreAdded","handleInputChange","newCustomer","placeholder","disabled","cartTotal","App","exact","path","component","Home","Cart","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcac0b44.chunk.js","sourcesContent":["export const CartActionTypes = {\n  CART_ADD_ITEM: 'CART_ADD_ITEM',\n  CART_REMOVE_ITEM: 'CART_REMOVE_ITEM',\n  CART_CLEAR_ITEM: 'CART_CLEAR_ITEM',\n};\n","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n","import { CartActionTypes } from './cart.actionTypes';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n  cartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.CART_ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CART_CLEAR_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.id !== action.payload.id\n        ),\n      };\n    case CartActionTypes.CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport cartReducer from './cart/cart.reducer';\n\nconst persistConfig = {\n  key: 'quoality-guest',\n  storage,\n  whitelist: ['cart'],\n};\n\nconst appReducer = combineReducers({\n  cart: cartReducer,\n});\n\nexport default persistReducer(persistConfig, appReducer);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\n\nimport appReducer from './appReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(appReducer, composeEnhancers(applyMiddleware()));\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { createSelector } from 'reselect';\n\nconst selectCart = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems, selectCartItems],\n  (cartItems, listItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.filter(\n    (cartItem) => \n    cartItem.price != null\n  ).reduce(\n    (accumulatedQuantity, cartItem) =>\n      accumulatedQuantity + cartItem.quantity * cartItem.price,\n    0\n  ).toFixed(2)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItemsCount } from '../../../redux/cart/cart.selector';\nimport './styles.css';\n\nconst ButtonCartCount = ({ cartCount }) => {\n  const history = useHistory();\n  return (\n    <div className='btnCartCount' onClick={() => history.push('/cart')}>\n      <div className='count'>{cartCount >= 100 ? '99+' : cartCount}</div>\n      <i className='fas fa-shopping-cart'></i>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartCount: selectCartItemsCount,\n});\n\nexport default connect(mapStateToProps)(ButtonCartCount);\n","import React from 'react';\nimport './styles.css';\n\nconst Logo = () => (\n  <div className='header-content_logo'>\n    <div>\n      <span>\n        <b>Mokka Food</b>\n      </span>\n    </div>\n  </div>\n);\n\nexport default Logo;\n","import React from 'react';\nimport Logo from '../Logo';\nimport './styles.css';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n      <span className='item-thank-you'>Thank You</span> <span className='item-heart'>❤️</span> for supporting our new business!\n      </p>\n      <Logo />\n    </footer>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/banner.75527149.png\";","import React from 'react';\nimport './styles.css';\nimport bannerImg from './banner.png';\nimport Logo from '../../common/Logo';\n\nconst Banner = ({ handleScrollMealPlans }) => (\n  <header>\n    <div className='header-content'>\n      <Logo />\n      <div className='content-main'>\n        <h1>Mokka Food</h1>\n        <h2>Website under construction.</h2>\n        <p>Fresh prepared meals for London, soon available for all of the UK!</p>\n        <button onClick={handleScrollMealPlans}>\n          View Menu <i className='fas fa-long-arrow-alt-right'></i>\n        </button>\n      </div>\n    </div>\n    <img className='header-img' src={bannerImg} alt='banner' />\n  </header>\n);\n\nexport default Banner;\n","import React from 'react';\nimport './styles.css';\n\nconst ButtonAddRemoveItem = ({ quantity, getClass, handleAddItem, handleRemoveItem }) => {\n  return (\n    getClass() == 'meal-plan'\n    ?\n    <div className='btnAddRemove'>\n      {quantity !== 0 ? (\n        <div className='btnAddRemove-positive'>\n          <i\n            className='fa fa-minus'\n            aria-hidden='true'\n            onClick={handleRemoveItem}\n          ></i>\n          <span> {quantity}</span>\n          <i className='fa fa-plus' aria-hidden='true' onClick={handleAddItem}></i>\n        </div>\n      ) : (\n        <div onClick={handleAddItem} className='btnAddRemove-negative'>\n          <span>ADD</span>\n          <i className='fa fa-plus' aria-hidden='true'></i>\n        </div>\n      )}\n    </div>\n    :\n    null\n  );\n};\n\nexport default ButtonAddRemoveItem;\n","import React from 'react';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  cartAddItem,\n  cartRemoveItem,\n} from '../../../../redux/cart/cart.action';\nimport {\n  selectCartItems,\n  selectCartItemsCount,\n} from '../../../../redux/cart/cart.selector';\nimport ButtonAddRemoveItem from '../../ButtonAddRemoveItem';\nimport './styles.css';\n\nconst MenuItem = ({\n  openItemDetails,\n  item,\n  cartCount,\n  cartList,\n  cartAddItem,\n  cartRemoveItem,\n}) => {\n  const { id, img, name, options, info, price } = item;\n  const [ forceUpdateValue, setForceUpdate ] = useState(0);\n\n  function forceUpdate() {\n    setForceUpdate(forceUpdateValue => forceUpdateValue + 1);\n  }\n\n  const handleQuantity = () => {\n    let quantity = 0;\n    if (cartCount !== 0) {\n      const foundItemInCart = cartList.find((item) => item.id === id);\n      if (foundItemInCart) {\n        quantity = foundItemInCart.quantity;\n      }\n    }\n    return quantity;\n  };\n\n  const OptionList = () => {\n    if (options != null) {\n      return (\n        <div className='option-list-root-div'>\n          <p className='option-list-desc'>Choose one:</p>\n          <div className='option-list-div'>\n            <select onChange={handleChange} className='select-item-options'>\n              {\n                Object.entries(options.idsAndNames).map(([id, name]) => {\n                  if (item.selectedOption + 1 == id) {\n                    return <option selected key={id} value={id} className='item-option'>{name}</option>\n                  } else {\n                    return <option key={id} value={id} className='item-option'>{name}</option>\n                  }\n                })\n              }\n            </select>\n          </div>\n        </div>\n        )\n    } else {\n      return null;\n    }\n  }\n\n  function handleChange(event) {\n    item.selectedOption = event.target.value - 1\n    item.calories = item.options.calories[item.selectedOption]\n    forceUpdate()\n  }\n\n  const Calories = () => {\n    if (item.calories != null) {\n      return (\n        <div className='item-calories-div'>\n          <p className='item-calories'>\n            <b>{item.calories}</b> Calories\n          </p>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const Info = () => {\n    if (info != null) {\n      return (\n        <p className='head_desc-info'>\n          {\n            info.map((infoElement, index) => {\n              return <span key={index}>{infoElement}<br/></span>\n            })\n          }\n        </p>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  const Price = () => {\n    if (price != null) {\n      return (\n        <p className='price'>£{price}</p>\n      )\n    } else {\n      return <p></p>;\n    }\n  }\n\n  const getClass = () => {\n    return String(id)[0] == 8 ? 'meal-plan' : 'menu-item'\n  }\n\n  return (\n    <div className={String(id)[0] == 8 ? 'item-meal-plan' : 'item'}>\n      <img onClick={() => openItemDetails(id)} className='item-image' src={img} alt='food' />\n      <div onClick={() => openItemDetails(id)} className='item-head_desc'>\n        <p className='head_desc-name'>{name}</p>\n        {/* <p>Monday</p> */}\n        <Info />\n      </div>\n      <OptionList />\n      <Calories />\n      <div className='item-add-button-div'>\n        <Price/>\n        <ButtonAddRemoveItem\n          quantity={handleQuantity()}\n          getClass={getClass}\n          handleRemoveItem={() => cartRemoveItem(item)}\n          handleAddItem={() => cartAddItem(item)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartCount: selectCartItemsCount,\n  cartList: selectCartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  cartAddItem: (item) => dispatch(cartAddItem(item)),\n  cartRemoveItem: (item) => dispatch(cartRemoveItem(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem);\n","import { CartActionTypes } from './cart.actionTypes';\n\nexport const cartAddItem = (item) => ({\n  type: CartActionTypes.CART_ADD_ITEM,\n  payload: item,\n});\n\nexport const cartRemoveItem = (item) => ({\n  type: CartActionTypes.CART_REMOVE_ITEM,\n  payload: item,\n});\n\nexport const cartclearItem = (item) => ({\n  type: CartActionTypes.CART_CLEAR_ITEM_FROM_CART,\n  payload: item,\n});\n","import { selectCartItems, selectCartItemsCount } from '../../../redux/cart/cart.selector';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport MenuItem from './MenuItem';\nimport React from 'react';\nimport './styles.css';\n\nconst Menu = forwardRef(({ cartItems, cartCount, openItemDetails, list }, ref) => {\n  return (\n    cartCount !== 0 && cartItems.find((cartItem) => String(cartItem.id)[0] == 8) \n    ?\n    <main className='menu-main' ref={ref}>\n      <h1 className='menu-meal-time-title'>Breakfast</h1>\n      <h1 className='menu-meal-time-title'>Lunch</h1>\n      <h1 className='menu-meal-time-title'>Dinner</h1>\n      {list.map((item) => (\n        <MenuItem openItemDetails={openItemDetails} item={item} key={item.id} />\n      ))}\n    </main>\n    :\n    null\n  )\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartCount: selectCartItemsCount,\n});\n\nexport default connect(mapStateToProps)(Menu);\n","import React, { forwardRef } from 'react';\nimport MenuItem from '../Menu/MenuItem';\nimport './styles.css';\n\nconst Menu = forwardRef(({ list }, ref) => (\n  <main className='meal-plans-main' ref={ref}>\n    {list.map((item) => (\n      <MenuItem openItemDetails={() => function(){}} item={item} key={item.id} />\n    ))}\n  </main>\n));\n\nexport default Menu;\n","export const menuItemsData = [\n  {\n    id: 101,\n    name: 'Chia Nutri Garden',\n    info: ['Let us take you in a lovely garden this morning!'],\n    options: \n    {\n      idsAndNames: {1: 'mokka', 2: 'kiwi', 3: 'berries'},\n      calories: [1200, 1000, 800]\n    },\n    calories: 1200,\n    img: '/images/chia-nutri-garden-min.jpeg'\n  },\n  { \n    id: 102,\n    name: 'Picasso Super Breakfast',\n    info: ['Picasso Super Breakfast'],\n    img: '/images/picasso-super-breakfast-min.jpeg'\n  },\n  {\n    id: 103,\n    name: 'Good Protein Morning',\n    info: ['Good Protein Morning'],\n    img: '/images/good-protein-morning-min.jpeg'\n  },\n  {\n    id: 104,\n    name: 'Eggs Wrap Wake Up',\n    info: ['Delicious brunch in a healthy home-made wrap!'],\n    img: '/images/eggs-wrap-wake-up-min.jpeg'\n  }\n];\n","export const mealPlanItemsData = [\n    {\n        id: 801,\n        name: 'Low Calorie Plan',\n        info: ['1200 - 1800 Calories.', 'Choose 15 meals!'],\n        img: '/images/meal-plan-temp-min.jpeg',\n        price: 64.99,\n        priceInCents: 6499\n    },\n    {\n        id: 802,\n        name: 'Mid Calorie Plan',\n        info: ['Balanced Plan.', '1800 - 2400 Calories.', 'Choose 15 meals!'],\n        img: '/images/meal-plan-temp-min.jpeg',\n        price: 74.99,\n        priceInCents: 7499\n    },\n    {\n        id: 803,\n        name: 'High Calorie Plan',\n        info: ['Muscle Gain Plan.', '2400 - 3200 Calories.', 'Choose 15 meals!'],\n        img: '/images/meal-plan-temp-min.jpeg',\n        price: 84.99,\n        priceInCents: 8499\n    }\n];","import React from 'react';\nimport './styles.css';\n\nconst MenuItemPopUpDetails = ({ closeItemDetails, item }) => {\n  return (\n    item != null\n    ?\n    <div className='modal'>\n      <div className='modal-content'>\n        <button className='modal-close-button' onClick={closeItemDetails}>\n          <i class=\"fas fa-times\"></i>\n        </button>\n        <h1>{item.id}</h1>\n        <p>{item.name}</p>\n        <p>{item.info}</p>\n      </div>\n    </div>\n    :\n    null\n  );\n};\n\nexport default MenuItemPopUpDetails;\n","import React from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport ButtonCartCount from '../../components/common/ButtonCartCount';\nimport Footer from '../../components/common/Footer';\nimport Banner from '../../components/Home/Banner';\nimport Menu from '../../components/common/Menu';\nimport MealPlans from '../../components/common/MealPlans';\nimport { menuItemsData } from '../../components/common/Menu/data';\nimport { mealPlanItemsData } from '../../components/common/MealPlans/data';\nimport { selectCartItems, selectCartItemsCount } from '../../redux/cart/cart.selector';\nimport MenuItemPopUpDetails from '../../components/common/Menu/MenuItemPopUpDetails';\nimport './styles.css';\n\nconst Home = ({ cartItems, cartCount }) => {\n  const [itemDetailsPopUp, setItemDetailsPopUp] = useState(null);\n\n  const mealPlansRef = useRef();\n  const menuRef = useRef();\n\n  // const scrollMenuIntoView = () => {\n  //   setTimeout(() => {\n  //     window.scrollTo({\n  //       top: 10000,\n  //       behavior: 'smooth'\n  //     })\n  //   }, 100);\n  // }\n\n  const scrollMealPlansIntoView = () => {\n    mealPlansRef.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  // const DisplayMenu = () => {\n  //   const hasAddedMealPlan = cartCount !== 0 && cartItems.find((cartItem) => String(cartItem.id)[0] == 8)\n  //   const isFirstMealPlanAdded = cartCount === 1\n  //   try {\n  //     if (hasAddedMealPlan) {\n  //       return <Menu openItemDetails={openItemDetails} list={menuItemsData} ref={menuRef}/>\n  //     } else {\n  //       return null;\n  //     }\n  //   } finally {\n  //     if (isFirstMealPlanAdded) {\n  //       // scrollMenuIntoView()\n  //     }\n  //   }\n  // }\n\n  function openItemDetails(id) {\n    const item = menuItemsData.find((item) => item.id === id)\n    setItemDetailsPopUp(item)\n  }\n\n  function closeItemDetails() {\n    setItemDetailsPopUp(null)\n  }\n\n  // const ItemDetails = () => {\n  //   if (item) {\n  //     return <MenuItemPopUpDetails item={item} />\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  return (\n    <div>\n      <Banner handleScrollMealPlans={scrollMealPlansIntoView} />\n      <MealPlans list={mealPlanItemsData} ref={mealPlansRef} />\n      <Menu openItemDetails={openItemDetails} list={menuItemsData} ref={menuRef}/>\n      <Footer />\n      <ButtonCartCount />\n      <MenuItemPopUpDetails closeItemDetails={closeItemDetails} item={itemDetailsPopUp} />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartCount: selectCartItemsCount,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport './styles.css';\n\nconst EmptyCart = () => {\n  const history = useHistory();\n  return (\n    <div className='emptyCart'>\n      <img src='https://merchlist.co/assets/emptycart.png' alt='' />\n      <button onClick={() => history.push('/')}>\n        <i className='fas fa-long-arrow-alt-left'></i> Shop Now\n      </button>\n    </div>\n  );\n};\n\nexport default EmptyCart;\n","import React from 'react';\nimport './styles.css';\n\nconst CartMenuItem = ({ item }) => {\n  const { id, img, name, options, info, price } = item;\n\n  const Info = () => {\n    if (info != null) {\n      return (\n        <p className='head_desc-info'>\n          {\n            info.map((infoElement, index) => {\n              return <span key={index}>{infoElement}<br/></span>\n            })\n          }\n        </p>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className={String(id)[0] == 8 ? 'item-meal-plan' : 'item'}>\n      <img className='item-image' src={img} alt='food' />\n      <div className='item-head_desc'>\n        <p className='head_desc-name'>{name}</p>\n        <Info />\n      </div>\n    </div>\n  );\n};\n\nexport default CartMenuItem;\n","import { selectCartItems, selectCartItemsCount } from '../../../../redux/cart/cart.selector';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { forwardRef } from 'react';\nimport CartMenuItem from '.././CartMenuItem';\nimport React from 'react';\nimport './styles.css';\n\nconst CartMenu = forwardRef(({ cartItems, cartCount, openItemDetails, list }, ref) => {\n  return (\n    cartCount !== 0 && cartItems.find((cartItem) => String(cartItem.id)[0] == 8) \n    ?\n    <main className='menu-main' ref={ref}>\n      {list.map((item) => (\n        <CartMenuItem item={item} key={item.id} />\n      ))}\n    </main>\n    :\n    null\n  )\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartCount: selectCartItemsCount,\n});\n\nexport default connect(mapStateToProps)(CartMenu);\n","import React from 'react';\nimport { useState } from 'react';\n// import { useEffect } from 'react';\nimport './styles.css';\nimport { CardElement, PaymentRequestButtonElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n<script src=\"https://js.stripe.com/v3/\"></script>\n\nconst CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n        base: {\n            iconColor: '#555',\n            color: '#111',\n            fontWeight: 900,\n            fontFamily: 'Montserrat, sans-serif',\n            fontSize: '14px',\n            fontSmoothing: 'antialiased',\n            ':-webkit-autofill': { color: '#555' },\n            '::placeholder': { color: '#555' }\n        },\n        invalid: {\n            iconColor: '#f30',\n            color: '#f30'\n        }\n    }\n}\n\nconst PaymentForm = ({ customer, customerDetailsAreAdded }) => {\n    const [success, setSuccess] = useState(false)\n    // const [paymentRequest, setPaymentRequest] = useState(null);\n    const [serverMessage, setServerMessage] = useState('')\n    const stripe = useStripe()\n    const elements = useElements()\n\n    // useEffect(() => {\n    //     if (!stripe || !elements) {\n    //         return;\n    //     }\n\n    //     const pr = stripe.paymentRequest({\n    //         currency: 'gbp',\n    //         country: 'UK',\n    //         requestPayerEmail: true,\n    //         requestPayerName: true,\n    //         requestPayerPhone: true,\n    //         requestShipping: true,\n    //         total: {\n    //             label: 'Test payment (with Apple)',\n    //             amount: 100\n    //         }\n    //     })\n\n    //     pr.canMakePayment().then((result) => {\n    //         if(result) {\n    //             setPaymentRequest(pr);\n    //         }\n    //     })\n    // })\n\n    const handleSubmit = async (e) => {\n        if (customerDetailsAreAdded) {\n            setServerMessage('Processing payment...')\n            e.preventDefault()\n\n            const {error, paymentMethod} = await stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n            })\n\n            if (!error) {\n                try {\n                    const {id} = paymentMethod\n                    const response = await axios.post('https://mokkafoodapi.co.uk:8443/payment', {\n                        customerFirstName: customer.firstName,\n                        customerLastName: customer.lastName,\n                        customerEmail: customer.email,\n                        customerStreetName: customer.streetName,\n                        customerStreetNumber: customer.streetNumber,\n                        customerPostCode: customer.postCode,\n                        customerCity: customer.city,\n                        customerCountry: customer.country,\n                        amount: 100,\n                        id: id\n                    })\n\n                    setServerMessage(response.data.message)\n        \n                    if (response.data.success) {\n                        console.log('Payment successful.')\n                        setSuccess(true)\n                    }\n                } catch (error) {\n                    console.log('Payment error: ', error.message)\n                    setServerMessage(error.message)\n                }\n            } else {\n                console.log('Payment error: ', error.message)\n                setServerMessage(error.message)\n            }\n        } else {\n            setServerMessage('Customer details are missing.')\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <>\n        {\n            \n            !success ?\n            <form onSubmit={handleSubmit}>\n                <fieldset className='FormGroup'>\n                    <div className='FormRow'>\n                        <CardElement options={CARD_OPTIONS} />\n                    </div>\n                </fieldset>\n                <button className='payment-button'>Pay £1.00</button>\n                {/* {paymentRequest && <PaymentRequestButtonElement options={{paymentRequest}} />} */}\n                <h3>{serverMessage}</h3>\n            </form>\n            :\n            <div>\n                <h3>{serverMessage}</h3>\n            </div>\n        }\n        </>\n    )\n}\n  \nexport default PaymentForm;","import React from 'react';\nimport { useState } from 'react';\nimport './styles.css';\nimport { Elements } from \"@stripe/react-stripe-js\"\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport PaymentForm from '../../components/PaymentForm';\n\nconst STRIPE_PUBLIC_KEY_TEST = \"pk_test_51KiNNxIJsRU3NrL6hjk2WsS42Ww3vbUepszzMxRtkJ8eEGMOd35bIosepRO0RMdYo0iVDq6wDfqNE24lvJQZeyJ500WqdFX1Pu\"\nconst STRIPE_PUBLIC_KEY_PROD = \"pk_live_51KiNNxIJsRU3NrL6Gh2yTxyQYnz8xXtY15Hv15d49X0tqNHtKQcjIbo0aJJsCokJ3IshLPXgcT9n5D3v5AJ7RBvM00nrYtJ7MZ\"\nconst stripePromise = loadStripe(STRIPE_PUBLIC_KEY_TEST)\n\nconst Payment = () => {\n  var emptyCustomer = {\n    firstName: null,\n    lastName: null,\n    email: null,\n    confirmedEmail: null,\n    streetName: null,\n    streetNumber: null,\n    postCode: null,\n    city: 'London',\n    country: 'UK'\n  }\n\n  const [customer, setCustomer] = useState(emptyCustomer)\n  const [customerDetailsAreAdded, setCustomerDetailsAreAdded] = useState(false);\n  \n  function handleInputChange(e) {\n    var newCustomer = customer;\n    switch (e.target.id) {\n      case 'first-name':\n        newCustomer.firstName = e.target.value;\n        break;\n      case 'last-name':\n        newCustomer.lastName = e.target.value;\n        break;\n      case 'email':\n        newCustomer.email = e.target.value;\n        break;\n      case 'confirm-email':\n        newCustomer.confirmedEmail = e.target.value;\n        break;\n      case 'street-name':\n        newCustomer.streetName = e.target.value;\n        break;\n      case 'street-number':\n        newCustomer.streetNumber = e.target.value;\n        break;\n      case 'post-code':\n        newCustomer.postCode = e.target.value;\n        break;\n    }\n\n    if (customer.firstName != null, \n        customer.lastName != null,\n        customer.email != null,\n        customer.confirmedEmail != null,\n        customer.email == customer.confirmedEmail,\n        customer.streetName != null,\n        customer.streetName != null,\n        customer.postCode != null) {\n        setCustomerDetailsAreAdded(true);\n    }\n\n    setCustomer(newCustomer);\n    console.log(customer);\n  }\n\n  return (\n    <div>\n      <div>\n        <form className='user-payment-form'>\n          <p className='user-payment-form-description'>To whom should we deliver this order?</p>\n          <div className='user-payment-form-names'>\n            <input type='text' id='first-name' name='first-name' placeholder='First Name' onChange={handleInputChange}></input>\n            <input type='text' id='last-name' name='last-name' placeholder='Last Name' onChange={handleInputChange}></input>\n          </div>\n          <p className='user-payment-form-description'>Where should we send your order info and receipt?</p>\n          <div className='user-payment-form-email'>\n            <input type='text' id='email' name='email' placeholder='E-mail' onChange={handleInputChange}></input>\n            <input type='text' id='confirm-email' name='confirm-email' placeholder='Confirm E-mail' onChange={handleInputChange}></input>\n          </div>\n          <p className='user-payment-form-description'>Where should we deliver your order?</p>\n          <div className='user-payment-form-address'>\n            <input className='user-payment-form-address-street-name' type='text' id='street-name' name='street-name' placeholder='Street Name' onChange={handleInputChange}></input>\n            <input className='user-payment-form-address-street-number' type='text' id='street-number' name='street-number' placeholder='Street Number' onChange={handleInputChange}></input>\n            <input className='user-payment-form-address-post-code' type='text' id='post-code' name='post-code' placeholder='Post Code' onChange={handleInputChange}></input>\n            <input className='user-payment-form-address-city' type='text' id='city' name='city' value='London, UK' disabled></input>\n          </div>\n        </form>\n      </div>\n      <Elements stripe={stripePromise}>\n        <PaymentForm customer={customer} customerDetailsAreAdded={customerDetailsAreAdded}/>\n      </Elements>\n    </div>\n  );\n};\n\nexport default Payment;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport EmptyCart from '../../components/Cart/EmptyCart';\nimport Footer from '../../components/common/Footer';\nimport Logo from '../../components/common/Logo';\nimport CartMenu from '../../components/common/Menu/CartMenu';\nimport Payment from '../Payment'\nimport {\n  selectCartItems,\n  selectCartItemsCount,\n  selectCartTotal,\n} from '../../redux/cart/cart.selector';\nimport './styles.css';\n\nconst Cart = ({ cartCount, cartList, cartTotal }) => {\n  return (\n    <>\n      <div className='cart-header'>\n        <Logo />\n      </div>\n      {cartCount === 0 ? (\n        <EmptyCart />\n      ) : (\n        <div className='orders'>\n          <h1 className='orders-heading'>Your Orders</h1>\n          <div className='orders-menu'>\n            <CartMenu list={cartList} />\n          </div>\n          <h3 className='orders-total-description'></h3>\n          {\n            cartList.map((item) => (\n              <h3 className='orders-total-description-item'>{item.name} <span className='order-description-item-price'>£{item.price}</span></h3>\n            ))\n          }\n          <h3 className='orders-total-description-item'>Delivery <span className='order-description-delivery-price'>£0.00</span></h3>\n          <h3 className='orders-total'>Your Total <span className='order-description-item-price'>£{cartTotal}</span></h3>\n          <Payment />\n        </div>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartCount: selectCartItemsCount,\n  cartList: selectCartItems,\n  cartTotal: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(Cart);\n","import React from 'react';\nimport './App.css';\nimport {\n  Redirect,\n  Switch,\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport Payment from './pages/Payment';\n\nconst App = () => {\n  return (\n    <div className='container'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/cart' component={Cart} />\n          <Route exact path='/payment' component={Payment} />\n          <Redirect to='/' />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}